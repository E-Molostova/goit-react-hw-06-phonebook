{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/Filter/Filte.module.css","Components/defaultContacts/DefaultContacts.js","redux/actions.js","redux/reducer.js","redux/store.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","defaultContacts","id","uuidv4","contactName","contactNumber","deleteContact","createAction","filterContact","addContact","payload","contactsReducer","createReducer","JSON","parse","window","localStorage","getItem","state","filter","contact","filterReducer","_","combineReducers","contacts","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","rootReducer","devTools","process","mapDispatchToProps","connect","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","name","value","className","style","formContact","onSubmit","preventDefault","some","toLowerCase","alert","handleAddContacts","inputLabel","type","onChange","pattern","title","required","contactInput","buttonInput","ContactList","filterContacts","console","log","includes","filteredContacts","contactsList","map","contactsItem","contactsDeleteBtn","onClick","Filter","divFilter","inputFilter","useEffect","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.15d55e15.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__3ub9t\",\"contactsItem\":\"ContactList_contactsItem__2yLsi\",\"contactsDeleteBtn\":\"ContactList_contactsDeleteBtn__2HTrw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputFilter\":\"Filte_inputFilter__13ENW\",\"inputLabel\":\"Filte_inputLabel__2piuN\",\"divFilter\":\"Filte_divFilter__2QowR\"};","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const defaultContacts = [\r\n  { id: uuidv4(), contactName: 'Rosie Simpson', contactNumber: '459-12-56' },\r\n  { id: uuidv4(), contactName: 'Hermione Kline', contactNumber: '443-89-12' },\r\n  { id: uuidv4(), contactName: 'Eden Clements', contactNumber: '645-17-79' },\r\n  { id: uuidv4(), contactName: 'Annie Copeland', contactNumber: '227-91-26' },\r\n];\r\n","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport const deleteContact = createAction('contacts/DeleteContact');\r\nexport const filterContact = createAction('contacts/FilterContact');\r\nexport const addContact = createAction('contacts/AddContact', (contactName, contactNumber) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    contactName,\r\n    contactNumber,\r\n  },\r\n}));\r\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport { defaultContacts } from '../Components/defaultContacts/DefaultContacts';\r\nimport { filterContact, addContact, deleteContact } from './actions';\r\n\r\nconst contactsReducer = createReducer(\r\n  JSON.parse(window.localStorage.getItem('contacts')) ?? defaultContacts,\r\n  {\r\n    [addContact]: (state, { payload }) => [...state, payload],\r\n    [deleteContact]: (state, { payload }) =>\r\n      state.filter(contact => {\r\n        return contact.id !== payload;\r\n      }),\r\n  },\r\n);\r\n\r\nconst filterReducer = createReducer('', {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport rootReducer from './reducer';\r\nimport logger from 'redux-logger';\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger];\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import React, { useState } from 'react';\r\nimport { connect, useSelector, useDispatch } from 'react-redux';\r\nimport { addContact } from '../../redux/actions';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport style from './ContactForm.module.css';\r\n\r\nconst ContactForm = () => {\r\n  const [contactName, setName] = useState('');\r\n  const [contactNumber, setNumber] = useState('');\r\n  const { contacts } = useSelector(state => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleAddContacts = (contactName, contactNumber) =>\r\n    dispatch(addContact(contactName, contactNumber));\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'contactName':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'contactNumber':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const isContactExist = () => {\r\n    contacts.some(contact => contact.contactName.toLowerCase() === contactName.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (isContactExist(contactName)) {\r\n      alert(`${contactName} is already in contacts!`);\r\n    } else {\r\n      handleAddContacts(contactName, contactNumber);\r\n      reset();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={style.formContact} onSubmit={handleSubmit}>\r\n      <label className={style.inputLabel}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"contactName\"\r\n          onChange={handleChange}\r\n          value={contactName}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          className={style.contactInput}\r\n        />\r\n      </label>\r\n      <label className={style.inputLabel}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"contactNumber\"\r\n          onChange={handleChange}\r\n          value={contactNumber}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          className={style.contactInput}\r\n        />\r\n      </label>\r\n      <button className={style.buttonInput} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: state.contacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { addContact };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../../redux/actions';\r\nimport PropTypes from 'prop-types';\r\nimport style from './ContactList.module.css';\r\n\r\nconst ContactList = () => {\r\n  const { contacts, filter } = useSelector(state => state);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteBtn = id => dispatch(deleteContact(id));\r\n\r\n  const filteredContacts = (contacts, filter) => {\r\n    console.log(contacts);\r\n    return contacts.filter(contact =>\r\n      contact.contactName.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  const filterContacts = filteredContacts(contacts, filter);\r\n\r\n  return (\r\n    <ul className={style.contactsList}>\r\n      {filterContacts.map(contact => (\r\n        <li className={style.contactsItem} key={contact.id}>\r\n          <p>{contact.contactName + ': ' + contact.contactNumber}</p>\r\n          <button\r\n            className={style.contactsDeleteBtn}\r\n            id={contact.id}\r\n            type=\"button\"\r\n            onClick={e => onDeleteBtn(contact.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  onDeleteBtn: PropTypes.func,\r\n};\r\nexport default ContactList;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { filterContact } from '../../redux/actions';\r\nimport style from './Filte.module.css';\r\n\r\nconst Filter = () => {\r\n  const filter = useSelector(state => state.filter);\r\n  const dispatch = useDispatch();\r\n  const handleChangeFilter = e => dispatch(filterContact(e.target.value));\r\n  return (\r\n    <div className={style.divFilter}>\r\n      <label className={style.inputLabel}>\r\n        Find contacts by name\r\n        <input\r\n          className={style.inputFilter}\r\n          type=\"text\"\r\n          value={filter}\r\n          name=\"search\"\r\n          onChange={handleChangeFilter}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\n\nconst App = ({ contacts }) => {\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <>\n      \n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts </h2>\n      <Filter />\n      <ContactList />\n      \n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts,\n});\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactInput\":\"ContactForm_contactInput__3iEkg\",\"buttonInput\":\"ContactForm_buttonInput__1_UUC\",\"formContact\":\"ContactForm_formContact__14ImO\",\"inputLabel\":\"ContactForm_inputLabel__o7rSg\"};"],"sourceRoot":""}